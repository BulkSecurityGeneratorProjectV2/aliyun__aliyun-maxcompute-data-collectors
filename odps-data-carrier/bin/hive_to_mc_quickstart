#!/bin/bash

function exit_on_failure() {
    if [ "$1" -ne 0 ]
    then
      echo "执行失败" && exit
    else
      echo "执行成功"
    fi
}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
MMA_HOME="$DIR/../"

if [[ $# -lt 4 ]]; then
    echo "Usage: sh hive_to_mc_quickstart SOURCE_DB SOURCE_TBL DEST_PROJECT DEST_TBL"
    exit -1
fi

SOURCE_DB=$1
SOURCT_TBL=$2
DEST_DB=$3
DEST_TBL=$4

echo "运行 quick start 前, 请确认您已经完成以下步骤"
echo "    1. 配置 conf 目录下的 odps_odps_config.ini 与 hive_config.ini"
echo "    2. 上传 conf 目录下的 odps_config.ini 至 hdfs:///tmp/odps_config.ini"
echo "    3. 创建永久函数 odps_data_dump_multi"
echo "quick start 将于 5 秒后开始运行, 输入 Ctrl + C 取消执行"

sleep 5

echo "进入目录 ${MMA_HOME}"
cd "${MMA_HOME}" || echo "执行失败" || exit

echo ""
echo "生成 MMA server 配置文件, 执行命令: "
echo "  sh bin/generate-config --to_server_config \\"
echo "  --hive_config conf/hive_config.ini  \\"
echo "  --odps_config conf/odps_config.ini > /dev/null 2>&1"
sh bin/generate-config --to_server_config \
--hive_config conf/hive_config.ini  \
--odps_config conf/odps_config.ini > /dev/null 2>&1
exit_on_failure $?

echo ""
echo "生成 MMA client 配置文件, 执行命令: "
echo "  sh bin/generate-config --to_client_config \\"
echo "  --hive_config conf/hive_config.ini  > /dev/null 2>&1"
sh bin/generate-config --to_client_config \
--hive_config conf/hive_config.ini  > /dev/null 2>&1
exit_on_failure $?

echo ""
echo "生成 MMA 迁移任务描述文件, 执行命令: "
echo "  echo $SOURCE_DB.$SOURCT_TBL:$DEST_DB.$DEST_TBL > table_mapping.txt"
echo "$SOURCE_DB.$SOURCT_TBL:$DEST_DB.$DEST_TBL" > conf/table_mapping.txt
echo "  sh bin/generate-config --to_migration_config \\"
echo "  --table_mapping conf/table_mapping.txt > /dev/null 2>&1"
sh bin/generate-config --to_migration_config \
--table_mapping conf/table_mapping.txt > /dev/null 2>&1
exit_on_failure $?

echo ""
echo "启动 MMA server, 执行命令: "
echo "  sh odps-data-carrier/bin/mma-server \ "
echo "  --config configs/mma_server_config.json > /dev/null 2>&1 &"
sh bin/mma-server --config mma_server_config.json /dev/null 2>&1 &
PID=$(jps | grep MmaServerMain | awk '{print $1}')
echo "MMA server pid: ${PID}"

echo ""
echo "提交迁移任务, 执行命令: "
echo "  sh bin/mma-client \\"
echo "  --config mma_client_config.json --start mma_migration_config.json"
sh bin/mma-client \
--config mma_server_config.json --start mma_migration_config.json
exit_on_failure $?

echo ""
echo "等待任务结束, 执行命令: "
echo "  sh bin/mma-client \\"
echo "  --config mma_server_config.json --wait $SOURCE_DB.$SOURCT_TBL"
sh bin/mma-client --config mma_server_config.json --wait "$SOURCE_DB.$SOURCT_TBL"
exit_on_failure $?

echo ""
echo "迁移完成, 结束 MMA server, 执行命令: "
echo "  kill ${PID}"
kill "${PID}"
exit_on_failure $?
